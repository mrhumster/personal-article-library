version: "3.4"

networks:
  pal-network:

volumes:
  node_modules:
  uploads:
  data_es:

services:
  frontend:
    build:
      context: frontend
      target: development
    stdin_open: true
    volumes:
      - ./frontend:/usr/src/app
      - node_modules:/usr/src/app/node_modules
    restart: always
    environment:
      NODE_PATH: /usr/src/app/node_modules
    networks:
      - pal-network
  backend:
    build:
      context: ./backend
      target: builder
    volumes:
      - ./backend/app:/app
      - uploads:/uploads/
      - ./logs/backend:/var/log/backend
    env_file:
      - .env
    restart: always
    networks:
      - pal-network
    ports:
      - "8000:8000"
    depends_on:
      - mongo
    command: uvicorn main:app --host 0.0.0.0 --port 8000 --root-path /api --reload
  mongo:
    image: mongo
    restart: always
    env_file:
      - .env
    networks:
      - pal-network
    volumes:
      - ./data:/data/db

  mongo-express:
    image: mongo-express
    restart: always
    env_file:
      - .env
    networks:
      - pal-network
    depends_on:
      - mongo
  nginx:
    restart: always
    build: ./nginx/
    volumes:
      - ./nginx/ssl/key.pem:/root/ssl/key.pem
      - ./nginx/ssl/cert.pem:/root/ssl/cert.pem
      - ./logs/nginx:/var/log/nginx/
      - uploads:/www/media/
    ports:
      - "443:443"
    depends_on:
      - backend
      - frontend
      - mongo
      - mongo-express
      - es
    networks:
      - pal-network

  es:
    image: 'bitnami/elasticsearch:latest'
    container_name: es
    volumes:
      - data_es:/bitnami/elasticsearch/data
    ports:
      - "9200:9200"
    networks:
      - pal-network
  kibana:
    image: 'bitnami/kibana:latest'
    container_name: kibana
    ports:
      - "5601:5601"
    environment:
      - KIBANA_ELASTICSEARCH_URL=es
    depends_on:
      - es
    networks:
      - pal-network